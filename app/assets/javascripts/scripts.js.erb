$(function() {
    gameID = $('#board').data("game");
    userID = $('#current_games').data("user");

    PrivatePub.subscribe("/games/" + gameID + "/turns", function(data, channel) {
        turn = $.parseJSON(data.turn);
        figure = $('.square-' + turn.from + ' img');
        newFigure = $(figure).clone();
        $('.square-' + turn.to + ' img').remove();
        $('.square-' + turn.to).append(newFigure);
        figure.remove();
        if(turn.second_from != '0') {
            if(turn.second_to != '0') {
                figure = $('.square-' + turn.second_from + ' img');
                newFigure = $(figure).clone();
                $('.square-' + turn.second_to).append(newFigure);
                figure.remove();
            }
            else {
                $('.square-' + turn.second_from + ' img').remove();
            }
        }
        else if(turn.second_to != '0') {
            figure = $('.square-' + turn.second_to + ' img');
            newFigure = $(figure).clone();
            $('.square-' + turn.to + ' img').remove();
            $('.square-' + turn.to).append(newFigure);
        }
        if(turn.next_turn == 'white') {
            next_turn = I18n.t("js.game.white_turn")
        }
        else {
            next_turn = I18n.t("js.game.black_turn")
        }
        $('#next_turn').html(next_turn);
        $('#notice').html('');
        $('#turn_from').val('');
        $('#turn_to').val('');
        turnID = $('#turns .turn:last-of-type').data("turn");
        if(turnID % 2 == 0) {
            $('#turns').append('<div class="col-xs-2">' + (turnID / 2 + 1) + '.</div>');
        }
        $('#turns').append('<div class="col-xs-5 turn" data-turn="' + (turnID + 1) + '"><span><img src="" alt=""></span><span>' + turn.from + ' - ' + turn.to + '</span></div>');
        switch (turn.icon) {
            case 'figures/wp.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/wp.png') %>" });
                break;
            case 'figures/wk.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/wk.png') %>" });
                break;
            case 'figures/wq.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/wq.png') %>" });
                break;
            case 'figures/wr.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/wr.png') %>" });
                break;
            case 'figures/wn.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/wn.png') %>" });
                break;
            case 'figures/wb.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/wb.png') %>" });
                break;
            case 'figures/bp.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/bp.png') %>" });
                break;
            case 'figures/bk.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/bk.png') %>" });
                break;
            case 'figures/bq.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/bq.png') %>" });
                break;
            case 'figures/br.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/br.png') %>" });
                break;
            case 'figures/bn.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/bn.png') %>" });
                break;
            case 'figures/bb.png':
                $('#turns .turn:last-of-type img').attr({ src: "<%= asset_path('figures/bb.png') %>" });
                break;
        }
        var audio = new Audio('<%= asset_path("turn.wav") %>');
        audio.play();
    });

    PrivatePub.subscribe("/games/" + gameID, function(data, channel) {
        game = $.parseJSON(data.game);
        userID = $('#board').data("user");
        if(game.game_result != null) {
            $('#result').html('');
            $('#result').append('<p>' + I18n.t("js.game.end") + '</p>');
            switch (game.game_result) {
                case 1:
                    res = I18n.t("js.game.white_wins");
                    break;
                case 0:
                    res = I18n.t("js.game.black_wins");
                    break;
                case 0.5:
                    res = I18n.t("js.game.draw");
                    break;
            }
            $('#result').append('<p>' + I18n.t("js.game.result") + ' - ' + res + '</p>');
            $('#actions').remove();
        }
        else if(game.offer_draw_by != null) {
            $('#actions .actions_block').remove();
            if(userID == game.offer_draw_by) {
                $('#actions').append('<div class="draw_block"><p>' + I18n.t("js.game.you_offer_draw") + '</p></div>');
            }
            else {
                $('#actions').append('<div class="draw_block"><p>' + I18n.t("js.game.you_get_draw") + '</p><p><a class="btn btn-default" data-remote="true" rel="nofollow" data-method="post" href="/chess/draw?direction=1&amp;game=' + gameID + '&amp;result=1">' + I18n.t("js.game.accept") + '</a><a class="btn btn-default" data-remote="true" rel="nofollow" data-method="post" href="/chess/draw?direction=1&amp;game=' + gameID + '&amp;result=0">' + I18n.t("js.game.decline") + '</a></p></div>');
            }
        }
        else if(game.offer_draw_by == null) {
            $('#actions .draw_block').remove();
            $('#actions').append('<div class="actions_block"><a class="btn btn-default" data-remote="true" href="/ru/chess/surrender/' + gameID + '">' + I18n.t("js.game.surrender") + '</a><a class="btn btn-default" data-remote="true" rel="nofollow" data-method="post" href="/ru/chess/draw?direction=0&amp;game=' + gameID + '&amp;result=0">' + I18n.t("js.game.offer_draw") + '</a></div>');
        }
    });

    PrivatePub.subscribe("/users/challenges", function(data, channel) {
        challenge = $.parseJSON(data.challenge);
        if(challenge.opponent == null) {
            enemy = 'everybody';
        }
        else {
            enemy = challenge.opponent.username;
        }
        newFigure = $('#challenges table tbody .hidden td:first-child form').clone();
        $('#challenges table tbody').prepend('<tr class="challenge_' + challenge.id + ' challenge"><td>' + challenge.user.username + '<span class="rating_block">' + challenge.user.elo + '</span></td><td>' + enemy + '</td><td>' + challenge.color + '</td><td></td></tr>');
        if(challenge.user.id != userID) {
            $('#challenges table tbody tr:first-child td:last-child').append(newFigure);
            $('#challenges table tbody tr:first-child #game_challenge').attr("value", challenge.id);
        }
        else {
            $('#challenges table tbody tr:first-child td:last-child').append('<a class="btn btn-sm btn-default" data-remote="true" rel="nofollow" data-method="delete" href="/challenges/' + challenge.id + '">X</a>');
        }
    });

    PrivatePub.subscribe("/users/" + userID + "/challenges", function(data, channel) {
        challenge = $.parseJSON(data.challenge);
        if(challenge.opponent == null) {
            enemy = 'everybody';
        }
        else {
            enemy = challenge.opponent.username;
        }
        newFigure = $('#challenges table tbody .hidden td:first-child form').clone();
        $('#challenges table tbody').prepend('<tr class="challenge_' + challenge.id + '"><td>' + challenge.user.username + '<span class="rating_block">' + challenge.user.elo + '</span></td><td>' + enemy + '</td><td>' + challenge.color + '</td><td></td></tr>');
        if(challenge.user.id != userID) {
            $('#challenges table tbody tr:first-child td:last-child').append(newFigure);
            $('#challenges table tbody tr:first-child #game_challenge').attr("value", challenge.id);
        }
        $('#challenges table tbody tr:first-child td:last-child').append('<a class="btn btn-sm btn-default" data-remote="true" rel="nofollow" data-method="delete" href="/challenges/' + challenge.id + '">X</a>');
    });

    PrivatePub.subscribe("/users/games", function(data, channel) {
        challenge = $.parseJSON(data.challenge);
        $('#challenges .challenge_' + challenge.id).remove();
    });

    PrivatePub.subscribe("/users/" + userID + "/games", function(data, channel) {
        game = $.parseJSON(data.game);
        $('#current_games h2').after('<div class="col-xs-6"><div class="game_block"><p>' + I18n.t("js.games.game") + ' â„–' + game.id + '</p><p>' + game.user.username + '<span class="rating_block">' + game.user.elo + '</span></p><p>' + game.opponent.username + '<span class="rating_block">' + game.opponent.elo + '</span></p><p><a class="btn btn-sm btn-default" href="/games/' + game.id + '">' + I18n.t("js.games.view") + '</a></p><div></div>');
    });

    $('#board').on('click', '.square', function(e) {
        square = $(this).data("square");
        if($('#turn_from').val() == '') {
            $('#turn_from').val(square);
        }
        else if ($('#turn_to').val() == '') {
            $('#turn_to').val(square);
            $.post("<%= ENV['CURRENT_HOST'] %>/chess/turn", $("#new_turn").serialize());
            $('#turn_from').val('');
            $('#turn_to').val('')
        }
    });
});